name: Build and Push Docker

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: DEV
    permissions:
      contents: read
      packages: write
    env:
      NODE_ENV: ${{ vars.NODE_ENV }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
          registry: ghcr.io

      # - name: Get Description
      #   id: get_description
      #   run: |
      #     description=$(cat README.md)
      #     echo "description=$description" >> $GITHUB_OUTPUT
          
      - name: Build and push Docker
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            NODE_ENV=${{ env.NODE_ENV }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/qhunt-api:latest
            ghcr.io/${{ github.repository_owner }}/qhunt-api:${{ github.sha }}
          outputs: |
            type=image,name=target,annotation-index.org.opencontainers.image.description=\# QHUNT API\n\n\#\# Run\n\n\`\`\`bash\n\# install\npnpm install\n\n\# run\n\# dont forget to config the hosts\ndocker compose up \-d\n\npnpm dev\n\n\# build\npnpm build\n\n\# start\npnpm start\n\`\`\`\n\n\#\# Docker\n\nYou can create bash script from this\n\n\`\`\`bash\nsha\=\$\(git rev\-parse HEAD\)\ntag\=\"ghcr\.io\/okyaneka\/qhunt\-api\:\$\{sha\}\"\ndocker build \-t \$tag \.\ndocker push \$tag\necho \"\$tag success\"\n\`\`\`\n
          push: true
